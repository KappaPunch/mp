#!/usr/bin/bash

### Set the job name
#PBS -N conversion
### Run in the queue named "default" - this is set up by looking at `qmgr -c "p s"`
#PBS -q ichiro3
### Use the bourne shell
#PBS -S /bin/sh
### Inherit the environment
#PBS -V

### Optionally set the destination for your program's output
#PBS -e localhost:$PBS_O_WORKDIR/PBS_stdout/job"$PBS_JOBID".err
#PBS -o localhost:$PBS_O_WORKDIR/PBS_stdout/job"$PBS_JOBID".out
#PBS -l nodes=1:ppn=1
###PBS -l mem=7gb
#PBS -l walltime=100:00:00

# Calculate the number of processors allocated to this run.
NPROCS=`wc -l < $PBS_NODEFILE`
# Calculate the number of nodes allocated.
NNODES=`uniq $PBS_NODEFILE | wc -l`
### Switch to the working directory; by default TORQUE launches processes
### from your home directory.
cd $PBS_O_WORKDIR
### Display the job context
echo
echo Working directory is $PBS_O_WORKDIR
echo Running on host `hostname`
echo Time is `date`
echo Directory is `pwd`
echo Using ${NPROCS} processors across ${NNODES} nodes
echo

### OpenMPI will automatically launch processes on all allocated nodes.
## MPIRUN=`which mpirun`
## ${MPIRUN} -machinefile $PBS_NODEFILE -np ${NPROCS} my-openmpi-program

### Or, just run your serial program
## <run your program here>

time python3.5 processes.py

echo "JOB DONE"
